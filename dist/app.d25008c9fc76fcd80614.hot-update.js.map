{"version":3,"file":"app.d25008c9fc76fcd80614.hot-update.js","mappings":"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","sources":["webpack://my-app/./src/components/orbita/OrbitSection/OrbitSection.tsx","webpack://my-app/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback, useMemo } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport styled from \"styled-components\";\r\nimport { OrbitCircleIcon } from \"../Icon/OrbitCircleIcon\";\r\nimport CenterCircleDate from \"../CenterCircleDate/CenterCircleDate\";\r\nimport Controller from \"../Controller/Controller\";\r\nimport { shouldForwardProp } from \"@styled-system/should-forward-prop\";\r\n\r\n// Types remain the same\r\ninterface TimelineItem {\r\n  id: number;\r\n  title: string;\r\n  start: number;\r\n  end: number;\r\n  data: TimelineData[];\r\n}\r\n\r\ninterface TimelineData {\r\n  year: number;\r\n  text: string;\r\n}\r\n\r\ninterface OrbitSectionProps {\r\n  data: TimelineItem[];\r\n  onSectionClick: (section: TimelineItem) => void;\r\n  activeSection: TimelineItem | null;\r\n}\r\n\r\n// Constants\r\nconst ORBIT_RADIUS = 250;\r\nconst SMALL_BUTTON_SIZE = 12;\r\nconst LARGE_BUTTON_SIZE = 50;\r\n\r\n// Styled Components\r\nconst OrbitContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst OrbitPath = styled.div`\r\n  display: none;\r\n\r\n  @media ${({ theme }) => theme.media.medium} {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst OrbitCircleIconWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\ninterface CircleButtonProps {\r\n  isActive: boolean;\r\n  isHovered: boolean;\r\n  rotationAngle: number;\r\n}\r\n\r\nconst CircleButton = styled.button.withConfig({\r\n  shouldForwardProp: (prop) => ![\"isActive\", \"isHovered\", \"rotationAngle\"].includes(prop),\r\n})<CircleButtonProps>`\r\n  position: absolute;\r\n  width: ${(props) => (props.isActive ? `${LARGE_BUTTON_SIZE}px` : `${SMALL_BUTTON_SIZE}px`)};\r\n  height: ${(props) => (props.isActive ? `${LARGE_BUTTON_SIZE}px` : `${SMALL_BUTTON_SIZE}px`)};\r\n  transform-origin: center center;\r\n  transform: ${({ rotationAngle }) => `\r\n    translate(-50%, -50%) \r\n    rotate(${rotationAngle}deg)\r\n  `};\r\n  transition: width 0.5s, height 0.5s, font-size 0.5s, box-shadow 0.5s, background-color 0.5s;\r\n  border-radius: 50%;\r\n  color: black;\r\n  font-size: ${(props) => (props.isHovered ? \"0.6rem\" : \"1rem\")};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid black;\r\n  background-color: ${(props) => (props.isActive ? \"#f5f5f5\" : \"black\")};\r\n\r\n  &:hover {\r\n    width: ${LARGE_BUTTON_SIZE}px;\r\n    height: ${LARGE_BUTTON_SIZE}px;\r\n    font-size: 1rem;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n    border: 1px solid black;\r\n    color: black;\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst OrbitSection: React.FC<OrbitSectionProps> = ({ data, activeSection: propActiveSection, onSectionClick }) => {\r\n  const orbitRef = useRef<HTMLDivElement>(null);\r\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\r\n  const [activeSection, setActiveSection] = useState<TimelineItem | null>(propActiveSection || null);\r\n  const [rotationAngle, setRotationAngle] = useState(0);\r\n\r\n  const calculatePosition = useCallback((index: number, total: number) => {\r\n    const angle = (index * 2 * Math.PI) / total;\r\n    return {\r\n      x: Math.cos(angle) * ORBIT_RADIUS,\r\n      y: Math.sin(angle) * ORBIT_RADIUS,\r\n    };\r\n  }, []);\r\n\r\n  const circlePositions = useMemo(() => {\r\n    return data.map((_, index) => calculatePosition(index, data.length));\r\n  }, [data.length, calculatePosition]);\r\n\r\n  const handleSectionClick = useCallback(\r\n    (section: TimelineItem) => {\r\n      if (!orbitRef.current) return;\r\n\r\n      setActiveSection(section);\r\n      const targetAngle = 360 - (360 / data.length) * section.id;\r\n      setRotationAngle(targetAngle);\r\n\r\n      gsap.to(orbitRef.current, {\r\n        rotation: targetAngle,\r\n        duration: 2,\r\n        ease: \"power2.out\",\r\n      });\r\n\r\n      onSectionClick(section);\r\n    },\r\n    [data.length, onSectionClick]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!activeSection && data.length > 0) {\r\n      setActiveSection(data[0]);\r\n    }\r\n  }, [data, activeSection]);\r\n\r\n  const handleNext = () => {\r\n    if (!activeSection) return;\r\n\r\n    const currentIndex = data.findIndex((item) => item.id === activeSection.id);\r\n    const nextIndex = (currentIndex + 1) % data.length;\r\n    handleSectionClick(data[nextIndex]);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (!activeSection) return;\r\n\r\n    const currentIndex = data.findIndex((item) => item.id === activeSection.id);\r\n    const prevIndex = (currentIndex - 1 + data.length) % data.length;\r\n    handleSectionClick(data[prevIndex]);\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <OrbitContainer>\r\n        <CenterCircleDate activeSection={activeSection} />\r\n        <OrbitPath ref={orbitRef}>\r\n          <OrbitCircleIconWrapper>\r\n            <OrbitCircleIcon radius={500} />\r\n            {data.map((section, index) => {\r\n              const position = circlePositions[index];\r\n              const isActive = activeSection?.id === section.id;\r\n\r\n              return (\r\n                <CircleButton\r\n                  key={section.id}\r\n                  isActive={isActive}\r\n                  isHovered={hoveredIndex === section.id}\r\n                  onClick={() => handleSectionClick(section)}\r\n                  onMouseEnter={() => setHoveredIndex(section.id)}\r\n                  onMouseLeave={() => setHoveredIndex(null)}\r\n                  rotationAngle={-rotationAngle}\r\n                  style={{\r\n                    left: `${position.x + ORBIT_RADIUS}px`,\r\n                    top: `${position.y + ORBIT_RADIUS}px`,\r\n                  }}\r\n                >\r\n                  {section.id}\r\n                </CircleButton>\r\n              );\r\n            })}\r\n          </OrbitCircleIconWrapper>\r\n        </OrbitPath>\r\n      </OrbitContainer>\r\n      <Controller onPrev={handlePrev} onNext={handleNext} />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrbitSection);\r\n","__webpack_require__.h = () => (\"76707c2d4fd9fa8c1edf\")"],"names":["React","useEffect","useRef","useState","useCallback","useMemo","gsap","styled","OrbitCircleIcon","CenterCircleDate","Controller","ORBIT_RADIUS","SMALL_BUTTON_SIZE","LARGE_BUTTON_SIZE","OrbitContainer","div","withConfig","displayName","componentId","OrbitPath","_ref","theme","media","medium","OrbitCircleIconWrapper","CircleButton","button","shouldForwardProp","prop","includes","props","isActive","concat","_ref2","rotationAngle","isHovered","Content","OrbitSection","_ref3","data","activeSection","propActiveSection","onSectionClick","orbitRef","hoveredIndex","setHoveredIndex","setActiveSection","setRotationAngle","calculatePosition","index","total","angle","Math","PI","x","cos","y","sin","circlePositions","map","_","length","handleSectionClick","section","current","targetAngle","id","to","rotation","duration","ease","handleNext","currentIndex","findIndex","item","nextIndex","handlePrev","prevIndex","createElement","ref","radius","position","key","onClick","onMouseEnter","onMouseLeave","style","left","top","onPrev","onNext","memo"],"sourceRoot":""}